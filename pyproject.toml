[project]
name = "cogeo-mosaic"
description = 'CLI and Backends to work with MosaicJSON.'
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
  { name = "Vincent Sarago", email = "vincent@developmentseed.com" },
]
keywords = ["COG", "MosaicJSON"]
classifiers = [
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: GIS",
]
dynamic = ["version", "readme"]
dependencies = [
  "attrs",
  "morecantile",
  "shapely>=2.0,<3.0",
  "pydantic~=2.0",
  "pydantic-settings~=2.0",
  "httpx",
  "rasterio",
  "rio-tiler>=7.0,<8.0",
  "supermorecado",
  "cachetools",
  "numpy",
  "click",
  "cligj",
  "click_plugins",
  "importlib_metadata; python_version < '3.10'",
]

[project.optional-dependencies]
aws = [
  "boto3",
]
az = [
  "azure-identity", "azure-storage-blob",
]
gcp = [
  "google-cloud-storage"
]
test = [
  "pytest", "pytest-cov", "boto3",
]
dev = [
  "pre-commit",
  "bump-my-version",
]
docs = [
  "mkdocs", "mkdocs-material", "pygments", "mkdocs-jupyter"
]

[project.urls]
Homepage = 'https://github.com/developmentseed/cogeo-mosaic'
Documentation = "https://developmentseed.org/cogeo-mosaic/"
Issues = "https://github.com/developmentseed/cogeo-mosaic/issues"
Source = "https://github.com/developmentseed/cogeo-mosaic"
Changelog = "https://developmentseed.org/cogeo-mosaic/release-notes/"

[project.scripts]
cogeo-mosaic = "cogeo_mosaic.scripts.cli:cogeo_cli"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = 'text/markdown'
# construct the PyPI readme from README.md and HISTORY.md
fragments = [
    {path = "README.md"},
    {text = "\n## Changelog\n\n"},
    {path = "CHANGES.md"},
]
# convert GitHUB issue/PR numbers and handles to links
substitutions = [
    {pattern = '(\s+)#(\d+)', replacement = '\1[#\2](https://github.com/developmentseed/cogeo-mosaic/issues/\2)'},
    {pattern = '(\s+)@([\w\-]+)', replacement = '\1[@\2](https://github.com/\2)'},
    {pattern = '@@', replacement = '@'},
]

[tool.hatch.version]
path = "cogeo_mosaic/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/tests",
  "/docs",
  ".github",
  ".bumpversion.cfg",
  ".flake8",
  ".gitignore",
  ".pre-commit-config.yaml",
]

[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme>=22.5.0"]
build-backend = "hatchling.build"

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
known_first_party = ["cogeo_mosaic"]
known_third_party = [
    "rasterio",
    "rio_tiler",
    "morecantile",
    "supermorecado",
    "shapely",
]
default_section = "THIRDPARTY"

[tool.mypy]
no_strict_optional = "True"

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = [
    "D1",  # pydocstyle errors
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # flake8
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # ignore zip() without an explicit strict= parameter, only support with python >3.10
    "B028",  # ignore No explicit stacklevel keyword argument found
]

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = ["D1"]

[tool.bumpversion]
current_version = "8.0.0"
search = "{current_version}"
replace = "{new_version}"
regex = false
tag = true
commit = true
tag_name = "{new_version}"

[[tool.bumpversion.files]]
filename = "cogeo_mosaic/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'
